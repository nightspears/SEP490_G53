@{
    Layout = "_layoutCommon";
    var customerId = ViewData["CustomerId"];
}

<style>
    .cart-table {
        width: 100%;
        border-collapse: collapse;
        font-family: Arial, sans-serif;
        font-size: 16px;
        color: #333;
        min-width: 750px;
        overflow: auto;
    }

        .cart-table th, .cart-table td {
            padding: 15px;
            text-align: left;
            border-bottom: 1px solid #ddd;
        }

        .cart-table th {
            background-color: #f2f2f2;
            color: #555;
            font-weight: 600;
            text-transform: uppercase;
        }

        .cart-table tr:hover {
            background-color: #f9f9f9;
        }

    .modal {
        display: none;
        position: fixed;
        z-index: 1;
        left: 0;
        top: 0;
        width: 100%;
        height: 100%;
        overflow: auto;
        background-color: rgba(0, 0, 0, 0.4);
    }

    .modal-content {
        background-color: #fefefe;
        margin: 15% auto;
        padding: 20px;
        border: 1px solid #888;
        width: 80%;
        max-width: 600px;
    }

    .close {
        color: #aaa;
        float: right;
        font-size: 28px;
        font-weight: bold;
    }

        .close:hover, .close:focus {
            color: black;
            text-decoration: none;
            cursor: pointer;
        }
</style>

<div class="container my-5">
    <div style="padding-top:70px">
        <h2 class="heading small">Vé đá bóng chính hãng <span>Viettel Shop</span></h2>
    </div>

    <div class="d-flex mt-5">
        <div class="col-md-9" id="lstSanPham">
            <div class="table-responsive" style="box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1); width:100%;">
                <table class="cart-table">
                    <thead>
                        <tr>
                            <th><input type="checkbox" id="selectAll" onchange="toggleSelectAll(this)"> </th>
                            <th>Vé trận đấu</th>
                            <th>Số lượng</th>
                            <th>Giá</th>
                            <th>Tổng</th>
                            <th>Thông tin vé</th>
                            <th>Thao tác</th>
                        </tr>
                    </thead>
                    <tbody id="bodyData"></tbody>
                </table>
                <div id="noDataMessage" style="display: none; text-align: center;">
                    <img src="https://img.freepik.com/premium-vector/no-data-concept-illustration_86047-488.jpg?w=2000" alt="No products" style="width: 250px;">
                </div>
            </div>
        </div>

        <div class="col-md-4">
            <div class="filter-section" style="box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2); padding: 20px;">
                <input hidden readonly type="text" id="cusId" name="name" value="@customerId" />
                <h5>Tổng : <span id="totalPrice" class="price" style="font-size:18px;color:orangered">0 VNĐ</span></h5>
                <h5>Phí VAT (5%) : <span id="VAT_Price" class="price" style="font-size:18px;color:orangered">0 VNĐ</span></h5>
                <h5>Tổng hóa đơn : <span id="totalBill" class="price" style="font-size:18px;color:orangered">0 VNĐ</span></h5>
                <button onclick="checkOutSelectedTickets()" class="btn btn-success w-100" style="margin-top: 10px">Thanh toán</button>
            </div>
        </div>
    </div>
</div>

<!-- Modal for ticket details -->
<div id="ticketDetailsModal" class="modal">
    <div class="modal-content">
        <span class="close" onclick="closeTicketDetails()">&times;</span>
        <h3>Chi tiết vé</h3>
        <p id="ticketDetailsContent"></p>
    </div>
</div>


<script>
    function displayTickets() {
        const tickets = JSON.parse(localStorage.getItem('cart')) || [];
        const bodyData = document.getElementById('bodyData');
        bodyData.innerHTML = "";

        if (tickets.length === 0) {
            document.getElementById("noDataMessage").style.display = "block";
        } else {
            document.getElementById("noDataMessage").style.display = "none";
            tickets.forEach((ticket, index) => {
                const row = `
                            <tr>
                                <td><input type="checkbox" class="select-ticket" data-index="${index}" onchange="updateSelectedTotal()"></td>
                                <td>Match ${ticket.matchId} - Area ${ticket.areaId}</td>
                                <td>${ticket.quantity}</td>
                                <td>${ticket.price} VND</td>
                                <td>${(ticket.price * ticket.quantity).toFixed(0)} VND</td>
                                <td><input type="button" class="btn btn-info btn-sm" value="Xem thông tin vé" onclick="showTicketDetails(${index})"></td>
                                <td><button class="btn btn-danger btn-sm" onclick="removeTicket(${index})">Xóa</button></td>
                            </tr>
                        `;
                bodyData.insertAdjacentHTML("beforeend", row);
            });
        }
        updateSelectedTotal();
    }

    function toggleSelectAll(selectAllCheckbox) {
        const checkboxes = document.querySelectorAll('.select-ticket');
        checkboxes.forEach(checkbox => checkbox.checked = selectAllCheckbox.checked);
        updateSelectedTotal();
    }

    function showTicketDetails(index) {
        const tickets = JSON.parse(localStorage.getItem('cart')) || [];
        const ticket = tickets[index];

        const supplementaryDetails = ticket.supplementaryItems
            .map(item => `${item.itemId} - Số lượng: ${item.itemQuantity}, Giá: ${item.itemPrice} VND`)
            .join('<br>');

        const detailsContent = `
                    <p><strong>Cửa:</strong> ${ticket.section}</p>
                    <p><strong>Tầng:</strong> ${ticket.floor}</p>
                    <p><strong>Khán đài:</strong> ${ticket.stands}</p>
                    <p><strong>Đồ đính kèm:</strong><br>${supplementaryDetails || 'Không có'}</p>
                `;

        document.getElementById('ticketDetailsContent').innerHTML = detailsContent;
        document.getElementById('ticketDetailsModal').style.display = 'block';
    }

    function closeTicketDetails() {
        document.getElementById('ticketDetailsModal').style.display = 'none';
    }

    function updateSelectedTotal() {
        const selectedTickets = [];
        document.querySelectorAll('.select-ticket:checked').forEach(checkbox => {
            const index = checkbox.getAttribute('data-index');
            const tickets = JSON.parse(localStorage.getItem('cart')) || [];
            selectedTickets.push(tickets[index]);
        });

        let total = selectedTickets.reduce((sum, ticket) => {
            const ticketTotal = ticket.price * ticket.quantity;
            const supplementaryTotal = (ticket.supplementaryItems || []).reduce((suppSum, item) => suppSum + (item.itemPrice * item.itemQuantity), 0);
            return sum + ticketTotal + supplementaryTotal;
        }, 0);

        const vat = total * 0.05;
        const totalBill = total + vat;

        document.getElementById('totalPrice').textContent = `${total.toFixed(0)} VNĐ`;
        document.getElementById('VAT_Price').textContent = `${vat.toFixed(0)} VNĐ`;
        document.getElementById('totalBill').textContent = `${totalBill.toFixed(0)} VNĐ`;
    }

    function checkOutSelectedTickets() {
        const selectedTickets = [];
        const selectedIndexes = [];

        document.querySelectorAll('.select-ticket:checked').forEach(checkbox => {
            const index = parseInt(checkbox.getAttribute('data-index'), 10);
            const tickets = JSON.parse(localStorage.getItem('cart')) || [];
            selectedTickets.push(tickets[index]);
            selectedIndexes.push(index);
        });

        if (selectedTickets.length === 0) {
            alert("Vui lòng chọn ít nhất một vé để thanh toán.");
            return;
        }

        let total = selectedTickets.reduce((sum, ticket) => {
            const ticketTotal = ticket.price * ticket.quantity;
            const supplementaryTotal = (ticket.supplementaryItems || []).reduce((suppSum, item) => suppSum + (item.itemPrice * item.itemQuantity), 0);
            return sum + ticketTotal + supplementaryTotal;
        }, 0);

        const vat = total * 0.05;
        const totalBill = total + vat;

        const confirmation = confirm(`Tổng tiền cho các vé đã chọn: ${totalBill.toFixed(0)} VNĐ (bao gồm VAT). Bạn có muốn tiếp tục thanh toán không?`);
        if (!confirmation) {
            return;
        }

        const customerId = document.getElementById('cusId').value;
        const orderDate = new Date().toISOString();

        const orderedTickets = selectedTickets.map(ticket => ({
            matchId: ticket.matchId,
            areaId: ticket.areaId,
            price: ticket.price,
            status: 0,
            orderId: 0
        }));

        const orderedSuppItems = selectedTickets.flatMap(ticket =>
            (ticket.supplementaryItems || []).map(item => ({
                orderId: 0,
                itemId: item.itemId,
                quantity: item.itemQuantity,
                price: item.itemPrice
            }))
        );

        const payload = {
            addCustomerDto: null,
            orderDate: orderDate,
            totalAmount: totalBill,
            customerId: customerId,
            orderedTickets: orderedTickets,
            orderedSuppItems: orderedSuppItems
        };

        $.ajax({
            url: `https://localhost:5000/api/TicketOrder?customerId=${customerId}`,
            type: 'POST',
            contentType: 'application/json',
            data: JSON.stringify(payload),
            success: function (response) {
                alert("Thanh toán thành công! Đơn hàng của bạn đã được xử lý.");

                const tickets = JSON.parse(localStorage.getItem('cart')) || [];
                const remainingTickets = tickets.filter((_, index) => !selectedIndexes.includes(index));

                localStorage.setItem('cart', JSON.stringify(remainingTickets));
                displayTickets();
            },
            error: function (xhr, status, error) {
                console.error("Lỗi khi thanh toán:", error);
                alert("Có lỗi xảy ra trong quá trình thanh toán. Vui lòng thử lại.");
            }
        });
    }

    document.addEventListener('DOMContentLoaded', displayTickets);
</script>
<script src="~/admin_assets/js/jquery-3.6.0.min.js"></script>