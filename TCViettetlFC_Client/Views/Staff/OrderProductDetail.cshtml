@model TCViettetlFC_Client.Models.OrderDetailDto

﻿@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
    Layout = "_LayoutAdmin";
}


        <div class="page-wrapper">
            <div class="content container-fluid">

                <div class="invoice-container">
                    <div class="row">
                        <div class="col-sm-6 m-b-20">
                            <img alt="Logo" class="inv-logo img-fluid" src="https://upload.wikimedia.org/wikipedia/en/thumb/6/62/The_Cong-Viettel_FC_logo.svg/1200px-The_Cong-Viettel_FC_logo.svg.png">
                        </div>
                        <div class="col-sm-6 m-b-20">
                            <div class="invoice-details">
                                <h3 class="text-uppercase">OrderId :  @Model.Id</h3>
                                <ul class="list-unstyled mb-0">
                                    <li>Date: <span> @Model.OrderDate?.ToString("g")</span></li>
                                </ul>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-sm-12 m-b-20">
                            <ul class="list-unstyled mb-0">
                                <li>TC-ViettelFC</li>
                                <li>Hà Nội</li>
                                <li>Thạch Hòa, Thạch Thất</li>
                                <li>GST No:</li>
                            </ul>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-sm-6 col-lg-7 col-xl-8 m-b-20">
                            <h6>Đơn hàng đến </h6>
                            <ul class="list-unstyled mb-0">
                                <li><h5 class="mb-0"><strong> @Model.CustomerFullName</strong></h5></li>
                                <li> @Model.Address.DetailedAddress</li>
                                <li>@Model.Address.DistrictName, @Model.Address.WardName</li>
                                <li>@Model.Address.CityName</li>
                                <li>@Model.CustomerPhone</li>
                                <li><a href="#"><span class="__cf_email__" data-cfemail="e3808b82918f868d8691868687a3869b828e938f86cd808c8e"> @Model.CustomerEmail</span></a></li>
                            </ul>
                        </div>
                        <div class="col-sm-6 col-lg-5 col-xl-4 m-b-20">
                            <h6>Payment Details</h6>
                            <ul class="list-unstyled invoice-payment-details mb-0">
                                <li>
                                    <h5>Tổng tiền đã thanh toán: <span class="text-end">@Convert.ToDecimal(Model.Payment.TotalAmount).ToString("N0", System.Globalization.CultureInfo.GetCultureInfo("vi-VN")) VND</span></h5>
                                </li>

                                <li>Phương thức thanh toán : <span> VNPAY</span></li>                           
                                <li>Mã hóa đơn thanh toán: <span> @Model.Payment.PaymentGateway</span></li>                           
                            </ul>
                        </div>
                    </div>
                    <div class="container">
                        <div class="row">
                            @foreach (var product in Model.Products)
                            {
                                <div class="col-md-6 col-lg-4 mb-4">
                                    <div class="card h-100">
                                        <div class="card-body">
                                            <h5 class="card-title">@product.Product.ProductName</h5>
                                            <div class="d-flex align-items-center mb-3">
                                                <img src="@product.Product.Avatar" alt="Avatar" class="img-fluid rounded-circle me-3" style="width: 50px; height: 50px;" />
                                                <span class="fw-bold">Product Id:@product.Product.ProductId</span>
                                            </div>
                                            @if (product.Player != null && !string.IsNullOrEmpty(product.Player.FullName))
                                            {
                                                <p class="mb-1"><strong>Tên Cầu Thủ:</strong> @product.Player.FullName</p>
                                            }

                                            @if (product.Player != null && product.Player.ShirtNumber != null)
                                            {
                                                <p class="mb-1"><strong>Số Áo Cầu Thủ:</strong> @product.Player.ShirtNumber</p>
                                            }

                                            @if (!string.IsNullOrEmpty(product.CustomShirtName))
                                            {
                                                <p class="mb-1"><strong>Tên In Áo Custom:</strong> @product.CustomShirtName</p>
                                            }

                                            @if (product.CustomShirtNumber != null)
                                            {
                                                <p class="mb-1"><strong>Số Áo Custom:</strong> @product.CustomShirtNumber</p>
                                            }

                                            <p class="mb-1"><strong>Unit Cost:</strong> @Convert.ToDecimal(product.Price).ToString("N0", System.Globalization.CultureInfo.GetCultureInfo("vi-VN")) VND</p>
                                            <p class="mb-1"><strong>Quantity:</strong> @product.Quantity</p>

                                            @* Calculate the total price for this product *@
                                            @{
                                                var totalPrice = product.Quantity * product.Price;
                                                var formattedPrice = string.Format(new System.Globalization.CultureInfo("vi-VN"), "{0:N0}", totalPrice);
                                            }

                                            <p class="mb-1"><strong>Total:</strong> @formattedPrice VND</p>
                                        </div>
                                    </div>
                                </div>
                            }
                        </div>
                    </div>

                    <div>
                        <div class="row invoice-payment">
                            <div class="col-sm-7">
                            </div>
                            <div class="col-sm-5">
                                <div class="m-b-20">
                                    <h6>Tông tiền:</h6>
                                    <div class="table-responsive no-border">
                                        <table class="table mb-0">
                                            <tbody>
                                                <tr>
                                                    <th>Tổng Tiền Hàng Hóa:</th>
                                                    <td class="text-end">
                                                        @{
                                                            var formattedTotalPrice = string.Format(new System.Globalization.CultureInfo("vi-VN"), "{0:N0}", Model.TotalPrice-Model.ShipmentFee);
                                                        }
                                                        @formattedTotalPrice VND
                                                    </td>
                                                </tr>
                                                <tr>
                                                    <th>Phí Vận Chuyển:</th>
                                                    <td class="text-end">
                                                        @{
                                                            var formattedShipmentFee = string.Format(new System.Globalization.CultureInfo("vi-VN"), "{0:N0}", Model.ShipmentFee);
                                                        }
                                                        @formattedShipmentFee VND
                                                    </td>
                                                </tr>
                                                <tr>
                                                    <th>Tổng Tiền:</th>
                                                    <td class="text-end text-primary">
                                                        <h5>
                                                            @{
                                                                var formattedTotal = string.Format(new System.Globalization.CultureInfo("vi-VN"), "{0:N0}", Model.TotalPrice);
                                                            }
                                                            @formattedTotal VND
                                                        </h5>
                                                    </td>
                                                </tr>


                                            </tbody>
                                        </table>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div id="responseMessage" class="mt-3"></div>

                     <div class="container my-4">
    <div class="invoice-info mb-4">
        <h5 class="text-center" onclick="toggleForm()" style="cursor: pointer;">
            Gửi đơn hàng qua bên vận chuyển 
            <span class="small text-muted">(Bấm để gửi/chỉnh sửa đơn hàng)</span> <!-- Indication for user -->
            <i class="bi bi-caret-down" id="toggleIcon"></i> <!-- Bootstrap Icons for toggle indication -->
        </h5>
        <hr />
    </div>

    <form id="shipmentForm" onsubmit="return createShipment(event)" class="shadow p-4 bg-light rounded" style="display: none;">
        <div class="row mb-3">
            <div class="col-md-6">
                <label for="rate" class="form-label">Rate</label>
                <input type="text" class="form-control" id="rate" name="Rate" required placeholder="Mã code vận chuyển" value="@Model.OrderCode">
            </div>
            <div class="col-md-6">
                <label for="order_id" class="form-label">Order ID</label>
                <input type="text" class="form-control" id="order_id" name="OrderId" required placeholder="Mã đơn hàng" value="@Model.Id">
            </div>
        </div>

        <h5 class="mt-4">Địa chỉ gửi</h5>
        <div class="row mb-3">
            <div class="col-md-6">
                <label for="address_from_name" class="form-label">Name</label>
                <input type="text" class="form-control" id="address_from_name" name="AddressFrom.Name" required placeholder="Tên người gửi" value="Thể Công Viettel-FC">
            </div>
            <div class="col-md-6">
                <label for="address_from_phone" class="form-label">Phone</label>
                <input type="text" class="form-control" id="address_from_phone" name="AddressFrom.Phone" required placeholder="Số điện thoại người gửi" value="0393680245">
            </div>
        </div>
        <div class="mb-3">
            <label for="address_from_street" class="form-label">Street</label>
            <input type="text" class="form-control" id="address_from_street" name="AddressFrom.Street" required placeholder="Địa chỉ người gửi" value="Đại Học FPT">
        </div>
        <div class="row mb-3">
            <div class="col-md-4">
                <label for="address_from_ward" class="form-label">Ward</label>
                <input type="text" class="form-control" id="address_from_ward" name="AddressFrom.Ward" value="426">
            </div>
            <div class="col-md-4">
                <label for="address_from_district" class="form-label">District</label>
                <input type="text" class="form-control" id="address_from_district" name="AddressFrom.District" value="101900">
            </div>
            <div class="col-md-4">
                <label for="address_from_city" class="form-label">City</label>
                <input type="text" class="form-control" id="address_from_city" name="AddressFrom.City" value="100000">
            </div>
        </div>

        <h5 class="mt-4">Địa chỉ nhận</h5>
        <div class="row mb-3">
            <div class="col-md-6">
                <label for="address_to_name" class="form-label">Name</label>
                <input type="text" class="form-control" id="address_to_name" name="AddressTo.Name" required placeholder="Tên người nhận" value="@Model.CustomerFullName">
            </div>
            <div class="col-md-6">
                <label for="address_to_phone" class="form-label">Phone</label>
                <input type="text" class="form-control" id="address_to_phone" name="AddressTo.Phone" required placeholder="Số điện thoại người nhận" value="@Model.CustomerPhone">
            </div> 
            <div class="col-md-6">
                <label for="address_to_email" class="form-label">Email</label>
                <input type="text" class="form-control" id="address_to_email" name="AddressTo.Email" required placeholder="Email người nhận" value="@Model.CustomerEmail">
            </div>
        </div>
        <div class="mb-3">
            <label for="address_to_street" class="form-label">Street</label>
            <input type="text" class="form-control" id="address_to_street" name="AddressTo.Street" required placeholder="Địa chỉ người nhận" value="@Model.Address.DetailedAddress">
        </div>
        <div class="row mb-3">
            <div class="col-md-4">
                <label for="address_to_ward" class="form-label">Ward</label>
                <input type="text" class="form-control" id="address_to_ward" name="AddressTo.Ward" required placeholder="0" value="@Model.Address.Ward">
            </div>
            <div class="col-md-4">
                <label for="address_to_district" class="form-label">District</label>
                <input type="text" class="form-control" id="address_to_district" name="AddressTo.District" required placeholder="100300" value="@Model.Address.District">
            </div>
            <div class="col-md-4">
                <label for="address_to_city" class="form-label">City</label>
                <input type="text" class="form-control" id="address_to_city" name="AddressTo.City" required placeholder="100000" value="@Model.Address.City">
            </div>
        </div>

        <h5 class="mt-4">Thông tin kiện hàng</h5>
        <div class="row mb-3">
            <div class="col-md-4">
                <label for="cod" class="form-label">COD Amount</label>
                <input type="number" class="form-control" id="cod" name="Parcel.Cod" required placeholder="500000" value="0">
            </div>
            <div class="col-md-4">
                <label for="amount" class="form-label">Amount</label>
                <input type="number" class="form-control" id="amount" name="Parcel.Amount" required placeholder="500000" value="0">
            </div>
            <div class="col-md-4">
                <label for="weight" class="form-label">Weight (g)</label>
                <input type="text" class="form-control" id="weight" name="Parcel.Weight" required placeholder="220">
            </div>
        </div>
        <div class="row mb-3">
            <div class="col-md-4">
                <label for="width" class="form-label">Width (cm)</label>
                <input type="text" class="form-control" id="width" name="Parcel.Width" required placeholder="15">
            </div>
            <div class="col-md-4">
                <label for="height" class="form-label">Height (cm)</label>
                <input type="text" class="form-control" id="height" name="Parcel.Height" required placeholder="15">
            </div>
            <div class="col-md-4">
                <label for="length" class="form-label">Length (cm)</label>
                <input type="text" class="form-control" id="length" name="Parcel.Length" required placeholder="15">
            </div>
        </div>
        <div class="mb-3">
            <label for="metadata" class="form-label">Ghi chú</label>
            <textarea class="form-control" id="metadata" name="Parcel.Metadata" rows="2" placeholder="Hàng dễ vỡ, vui lòng nhẹ tay."></textarea>
        </div>

        <button type="submit" class="btn btn-primary">Gửi</button>
    </form>
</div>
   <div id="responseMessage" class="mt-3"></div>
<script>
    function toggleForm() {
        const form = document.getElementById('shipmentForm');
        const icon = document.getElementById('toggleIcon');
        
        if (form.style.display === "none") {
            form.style.display = "block";
            icon.classList.remove("bi-caret-down");
            icon.classList.add("bi-caret-up");
        } else {
            form.style.display = "none";
            icon.classList.remove("bi-caret-up");
            icon.classList.add("bi-caret-down");
        }
    }
</script>



                    </div>
                </div>

            </div>
        </div>


    <script>
        async function createShipment(event) {
            event.preventDefault(); // Prevent the default form submission

            // Gather form data
            const formData = new FormData(event.target);
            const shipmentData = {
                shipment: {
                    rate: formData.get("Rate"),
                    order_id: formData.get("OrderId"),
                    address_from: {
                        name: formData.get("AddressFrom.Name"),
                        phone: formData.get("AddressFrom.Phone"),
                        street: formData.get("AddressFrom.Street"),
                        ward: formData.get("AddressFrom.Ward"),
                        district: formData.get("AddressFrom.District"),
                        city: formData.get("AddressFrom.City")
                    },
                    address_to: {
                        name: formData.get("AddressTo.Name"),
                        phone: formData.get("AddressTo.Phone"),
                        email: formData.get("AddressTo.Email"),
                        street: formData.get("AddressTo.Street"),
                        ward: formData.get("AddressTo.Ward"),
                        district: formData.get("AddressTo.District"),
                        city: formData.get("AddressTo.City")
                    },
                    parcel: {
                        name: "Giày dép, Quần áo",
                        cod: parseFloat(formData.get("Parcel.Cod")),
                        amount: parseFloat(formData.get("Parcel.Amount")),
                        weight: formData.get("Parcel.Weight"),
                        width: formData.get("Parcel.Width"),
                        height: formData.get("Parcel.Height"),
                        length: formData.get("Parcel.Length"),
                        metadata: formData.get("Parcel.Metadata")
                    },
                    payer: 1,
                    quantity: 1
                }
            };

            const options = {
                method: 'POST',
                headers: {
                    'Authorization': 'Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImp0aSI6ImRlYmI4YjNlYTc3OTYzY2JhZWNiNmY5M2ZjOWQ5M2QwZjRhNzRmOTBjZTgyMDc2MjlmM2Q5ODcxY2M2MDYyMWU5N2EzZjgxNjMzNTVhOGMyIn0.eyJhdWQiOiIxMTYiLCJqdGkiOiJkZWJiOGIzZWE3Nzk2M2NiYWVjYjZmOTNmYzlkOTNkMGY0YTc0ZjkwY2U4MjA3NjI5ZjNkOTg3MWNjNjA2MjFlOTdhM2Y4MTYzMzU1YThjMiIsImlhdCI6MTcyNjc5ODk3MCwibmJmIjoxNzI2Nzk4OTcwLCJleHAiOjE3NTgzMzQ5NzAsInN1YiI6IjMzMTYiLCJzY29wZXMiOltdfQ.Rd_OwL2rf4B7VmpSYa4ryaEqL5K2QQCZ24pN-rWclHZ_Ltx7ItWtUrEz8SIXGODTe3vfDrO80KvsMkvRLlB0-e8h96jMoAMsDz8z5qpbekfQTaneFDdMbQPWLPWzYtbzhQv44p6oWDLI9g0gPNIwfLXMYqZvPwTXPh9PdJrY4zqiQKWbZnfZIgbR1ovPifqMmZwiszQd8y-wVgCxqvb8I4zWJkfCw-Qva081kOgx0wphAEbfngInpzs8EngFZg0tMyH-mKBL1d1Zx20DhqQbrzGBTRUkZjCur_x2jgwdUtwu36O3ESuHfCxI-I-qCAIbHssbKSCe1gtZS5UcK5M5-H60rsRfSBTEnU3hqW1RM1CBt2cGu0pzc3RGtOzwBXzhyJaORI6PI9oDrb2Z_S7riZO9xXiedz-EUNh1oO27--ltBksJs2wBuDUvUhNRi-bewXAxCo_gYbY0Dvc8urSrij6h7bo8wNcu2KjelCrbA16Mo_n-Lz6gL6IfYV3M072YSnGTTejZ0d3nodekXR6SKun_cx85Dvf7US5TMIC5Pfndm0b0Q9ly0fnEVD_8WN9_9tjZMrC98nrS1Hm-4oxHrWzAuW3OeotJlgze9h42exNxOjt438J4zUvJd6fRCXbog4ewVPiqQRvhRpaBBnqBrx_7FyjtOAOOVNA3rQq2jhw', // Replace with your access token securely
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(shipmentData)
            };

            try {
                // Step 1: Create the shipment via GoShip API
                const response = await fetch('https://sandbox.goship.io/api/v2/shipments', options);
                const result = await response.json();

                if (response.ok) {
                    alert('Shipment created successfully!');
                    console.log(result);

                  
                    // Step 2: Update the order status
                    await updateOrderStatus(formData.get("OrderId"),1,1);
                    debugger
                    // Step 3: Prepare shipment data for local DB insertion
                    const localShipmentData = {
                        orderId: formData.get("OrderId"), // Ensure this returns the correct value
                        shipmentTrackingCode: result.id // Assuming result.code is the tracking code
                    };

                    // Step 4: Insert new shipment data into local DB
                    await upsertShipment(localShipmentData);
                      // Display relevant shipment information
                   document.getElementById('responseMessage').innerHTML = `
    <div class="alert alert-success" role="alert">
      <h4 class="alert-heading">Shipment Created Successfully!</h4>
      <ul class="list-unstyled">
          <li><strong>Code:</strong> ${result.code}</li>
          <li><strong>Status:</strong> ${result.status}</li>
          <li><strong>Shipment Status:</strong> ${result.shipment_status}</li>
          <li><strong>Tracking ID:</strong> ${result.id}</li>
          <li><strong>Carrier:</strong> ${result.carrier}</li>
          <li><strong>COD:</strong> ${result.cod}</li>
          <li><strong>Fee:</strong> ${result.fee}</li>
          <li><strong>Created At:</strong> ${result.created_at}</li>
      </ul>
      <hr>
      <p class="mb-0">Thank you for using our shipping service!</p>
    </div>
  `;
          const responseMessageElement = document.getElementById('responseMessage');
            responseMessageElement.scrollIntoView({ behavior: 'smooth', block: 'center' });
                } else {
                    alert(`Error: ${result.message || 'Something went wrong'}`);
                    console.error('Error response:', result);
                }
            } catch (error) {
                console.error('Fetch error:', error);
                alert('Failed to create shipment. Please try again later.');
            }
        }

        async function updateOrderStatus(orderId, newStatus, staffId) {
            try {
                const response = await fetch(`https://localhost:5000/api/Order/${orderId}/status`, {
                    method: 'PUT',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({ newStatus: newStatus, staffId: staffId }) // Send both newStatus and staffId
                });

                const result = await response.json();

                if (response.ok) {
                    console.log('Order status updated successfully:', result);
                } else {
                    console.error('Error updating order status:', result);
                }
            } catch (error) {
                console.error('Error updating order status:', error);
            }
        }
        async function upsertShipment(shipmentData) {
            try {
                debugger
                const response = await fetch('https://localhost:5000/api/Order/shipment', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify(shipmentData) // Ensure this matches the ShipmentDto structure
                });

                const result = await response.json();

                if (response.ok) {
                    console.log('Shipment added/updated successfully:', result);
                } else {
                    console.error('Error creating/updating shipment:', result);
                    // You can also log the response status for better debugging
                    console.error('Response status:', response.status);
                }
            } catch (error) {
                console.error('Error creating/updating shipment:', error);
            }
        }

    </script>



    <script data-cfasync="false" src="../../../cdn-cgi/scripts/5c5dd728/cloudflare-static/email-decode.min.js"></script>
    <script src="~/assets/js/jquery-3.6.0.min.js"></script>

    <script src="~/assets/js/bootstrap.bundle.min.js"></script>

    <script src="~/assets/js/feather.min.js"></script>

    <script src="~/assets/plugins/slimscroll/jquery.slimscroll.min.js"></script>

    <script src="~/assets/js/script.js"></script>
